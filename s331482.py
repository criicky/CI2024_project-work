import numpy as np
import math
import utils.protectedOperators as po

def f1(x: np.ndarray) -> np.ndarray:
    return po.protected_sin(x[0])

def f2(x: np.ndarray) -> np.ndarray:
    return (
        
    )

def f3(x: np.ndarray) -> np.ndarray:
    return (
        np.add(
            np.subtract(
                np.subtract(
                    np.subtract(
                        np.subtract(
                            np.square(x[0]),
                            x[2]
                        ),
                        np.square(x[1])
                    ),
                    np.subtract(
                        np.subtract(
                            x[1],
                            np.square(x[0])
                        ),
                        2
                    )
                ),
                np.multiply(
                    np.multiply(
                        x[1],
                        2
                    ),
                    np.minimum(
                        np.square(x[1]),
                        np.square(
                            po.protected_divide(
                                x[1],
                                2
                            )
                        )
                    )
                )
            ),
            np.add(
                np.subtract(
                    np.subtract(
                        np.subtract(
                            x[1],
                            po.protected_divide(
                                x[2],
                                2
                            )
                        ),
                        np.add(
                            x[2],
                            np.subtract(
                                x[2],
                                2
                            )
                        )
                    ),
                    np.square(
                        np.square(
                            po.protected_divide(
                                x[1],
                                2
                            )
                        )
                    )
                ),
                np.square(
                    np.subtract(
                        x[1],
                        np.square(
                            po.protected_divide(
                                x[1],
                                2
                            )
                        )
                    )
                )
            )
        )
    )

def f4(x: np.ndarray) -> np.ndarray:
    return (
        np.add(
            np.add(
                np.add(
                    po.protected_cos(x[1]),
                    po.protected_divide(
                        np.add(
                            po.protected_cos(
                                po.protected_sinh(
                                    po.protected_mod(
                                        po.protected_mod(
                                            np.minimum(
                                                po.protected_mod(
                                                    2,
                                                    3.14159
                                                ),
                                                po.protected_reciprocal(0)
                                            ),
                                            1.73205
                                        ),
                                        np.cbrt(2.71828)
                                    )
                                ),
                                po.protected_divide(
                                    np.negative(x[0]),
                                    po.protected_cosh(
                                        po.protected_cos(2.71828)
                                    )
                                )
                            )
                        ),
                        po.protected_cosh(2.71828)
                    )
                ),
                po.protected_cos(x[1])
            ),
            np.add(
                np.add(
                    np.add(
                        2.71828,
                        np.add(
                            np.minimum(
                                np.maximum(
                                    np.add(
                                        0.693147,
                                        po.protected_cos(x[1])
                                    ),
                                    np.add(
                                        2.71828,
                                        po.protected_cos(x[1])
                                    )
                                ),
                                np.minimum(
                                    np.maximum(
                                        x[1],
                                        po.protected_exp(2.71828)
                                    ),
                                    po.protected_cos(x[1])
                                ),
                                po.protected_cos(x[1])
                            )
                        ),
                        np.add(
                            np.add(
                                po.protected_cos(x[1]),
                                po.protected_log10(2.71828)
                            ),
                            po.protected_cos(x[1])
                        ),
                        po.protected_cos(x[1])
                    )
                )
            )
        )
    )

def f5(x: np.ndarray) -> np.ndarray:
    return (
        po.protected_reciprocal(
            np.square(
                np.subtract(
                    np.multiply(
                        np.maximum(
                            np.square(
                                po.protected_arcsin(
                                    po.protected_power(
                                        po.protected_log10(
                                            np.maximum(
                                                np.maximum(1, x[1]), 
                                                po.protected_sinh(-1)
                                            )
                                        ), 
                                        po.protected_divide(
                                            po.protected_divide(
                                                po.protected_mod(1, x[0]),
                                                po.protected_cos(2)
                                            ), 
                                            2
                                        )
                                    )
                                )
                            ), 
                            x[0]
                        ), np.maximum(
                            po.protected_sin(x[1]), 
                            np.subtract(
                                po.protected_arccos(x[1]), 
                                x[1]
                            )
                        )
                    ),
                    x[0]
                )
            )
        )
    )

def f6(x: np.ndarray) -> np.ndarray:
    return (
        np.add(
            po.protected_divide(
                np.subtract(x[1], x[0]),
                np.minimum(
                    po.protected_sqrt(
                        po.protected_cosh(
                            po.protected_exp(3.14159)
                        )
                    ),
                    po.protected_arctan(
                        po.protected_cosh(2.71828)
                    )
                )
            ),
            x[1]
        )
    )

def f7(x: np.ndarray) -> np.ndarray:
    return (
        np.multiply(
            np.maximum(
                np.maximum(
                    np.add(
                        po.protected_power(
                            np.multiply(
                                np.add(
                                    np.square(
                                        po.protected_mod(
                                            np.multiply(
                                                x[0], 
                                                po.protected_sinh(3.14159)
                                            ), 
                                            np.add(
                                                x[1], 
                                                np.multiply(
                                                    0.693147, 
                                                    x[0]
                                                )
                                            )
                                        )
                                    ), 
                                    po.protected_power(
                                        np.add(
                                            po.protected_sqrt(2.30259), 
                                            po.protected_cos(x[1])
                                        ), 
                                        np.maximum(
                                            po.protected_cosh(
                                                po.protected_mod(
                                                    x[0], 
                                                    1.41421
                                                )
                                            ), 
                                            x[1]
                                        )
                                    )
                                ), 
                                np.square(
                                    np.abs(
                                        np.add(
                                            np.square(
                                                np.add(
                                                    x[1], 
                                                    x[0])
                                                ), 
                                                po.protected_exp(
                                                    po.protected_arctan(2.30259)
                                                )
                                            )
                                        )
                                    )
                                ), 
                                po.protected_tanh(
                                    po.protected_tanh(
                                        po.protected_tanh(
                                            po.protected_log10(
                                                np.square(1.73205)
                                            )
                                        )
                                    )
                                )
                            ), 
                            np.square(
                                po.protected_mod(
                                    np.multiply(
                                        x[1], 
                                        po.protected_sinh(2.71828)
                                    ), 
                                    np.add(
                                        x[1], 
                                        po.protected_mod(
                                            np.multiply(
                                                np.maximum(
                                                    x[0], 
                                                    x[1]
                                                ), 
                                                po.protected_sinh(2.71828)
                                            ), 
                                            np.add(
                                                np.maximum(
                                                    x[0], 
                                                    x[0]
                                                ), 
                                                x[0]
                                            )
                                        )
                                    )
                                )
                            )
                        ), 
                        po.protected_power(
                            np.multiply(
                                np.add(
                                    np.square(
                                        np.add(
                                            1.61803, 
                                            x[0]
                                        )
                                    ), 
                                    po.protected_exp(
                                        po.protected_cos(
                                            np.maximum(
                                                x[1], 
                                                po.protected_sin(x[0])
                                            )
                                        )
                                    )
                                ), 
                                np.abs(
                                    np.add(
                                        np.square(
                                            np.add(
                                                x[1], 
                                                x[0]
                                            )
                                        ), 
                                        po.protected_exp(
                                            po.protected_cos(x[0])
                                        )
                                    )
                                )
                            ), 
                            po.protected_tanh(
                                po.protected_tanh(
                                    po.protected_tanh(
                                        np.multiply(
                                            np.multiply(
                                                np.maximum(
                                                    x[0], 
                                                    x[1]
                                                ), 
                                                po.protected_sinh(2.71828)
                                            ), 
                                            po.protected_power(
                                                np.square(x[1]), 
                                                1.73205
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    ), 
                    np.square(
                        np.add(
                            np.multiply(
                                po.protected_mod(
                                    po.protected_sin(2.71828), 
                                    po.protected_log2(
                                        np.subtract(
                                            x[1], 
                                            x[0]
                                        )
                                    )
                                ), 
                                np.subtract(
                                    po.protected_sin(
                                        np.minimum(
                                            po.protected_arctan(x[1]), 
                                            np.minimum(
                                                x[0], 
                                                x[1]
                                            )
                                        )
                                    ), 
                                    x[0]
                                )
                            ),
                            x[0]
                        )
                    )
                ), 
                np.maximum(
                    np.add(
                        np.square(
                            po.protected_tanh(
                                po.protected_tanh(
                                    np.add(
                                        po.protected_power(
                                            np.square(x[1]), 
                                            1.73205
                                        ), 
                                        po.protected_arctan(1.73205)
                                    )
                                )
                            )
                        ), 
                        np.multiply(
                            np.add(
                                po.protected_arctan(1.73205), 
                                po.protected_mod(
                                    np.multiply(
                                        np.multiply(
                                            np.square(1.73205), 
                                            np.maximum(
                                                po.protected_sinh(x[1]),
                                                0
                                            )
                                        ), 
                                        np.subtract(x[0], np.maximum(x[1], x[1])
                                    )
                                ), 
                                np.add(
                                    np.add(
                                        np.maximum(
                                            1.73205, 
                                            1.73205
                                        ),
                                        x[0]
                                    ), 
                                    po.protected_mod(
                                        np.multiply(
                                            x[0], 
                                            po.protected_tan(1.73205)
                                        ), 
                                        np.add(
                                            x[1], x[1]
                                        )
                                    )
                                )
                            )
                        ), 
                        po.protected_tanh(
                            np.multiply(
                                po.protected_mod(
                                    np.maximum(
                                        po.protected_log2(
                                            np.subtract(
                                                x[1], x[0]
                                            )
                                        ), 
                                        np.minimum(
                                            po.protected_arctan(x[1]), 
                                            np.minimum(
                                                x[0], 
                                                x[1]
                                            )
                                        )
                                    ), 
                                    po.protected_log2(
                                        np.subtract(
                                            x[1], 
                                            x[0]
                                        )
                                    )
                                ), 
                                np.subtract(
                                    po.protected_sin(x[0]), 
                                    x[0]
                                )
                            )
                        )
                    )
                ), 
                np.multiply(
                    np.subtract(
                        np.subtract(
                            po.protected_sin(
                                po.protected_log2(
                                    np.subtract(
                                        x[1], 
                                        x[0]
                                    )
                                )
                            ), 
                            po.protected_sin(x[0])
                        ), 
                        np.negative(
                            np.add(
                                np.square(x[1]), 
                                np.multiply(
                                    po.protected_power(
                                        1, 
                                        x[0]
                                    ), 
                                    po.protected_tanh(
                                        np.add(
                                            po.protected_sqrt(2.30259), 
                                            po.protected_cos(x[1])
                                        )
                                    )
                                )
                            )
                        )
                    ), 
                    np.add(
                        np.add(
                            np.add(
                                np.add(
                                    np.add(
                                        1.73205, 
                                        np.subtract(
                                            x[1], 
                                            np.maximum(
                                                x[0], 
                                                x[1]
                                            )
                                        )
                                    ), 
                                    np.subtract(
                                        x[1], 
                                        np.maximum(
                                            x[0], 
                                            x[1]
                                        )
                                    )
                                ), 
                                np.subtract(
                                    np.minimum(
                                        x[0], 
                                        x[1]
                                    ), 
                                    np.maximum(
                                        x[0], 
                                        x[1]
                                    )
                                )
                            ), 
                            np.subtract(
                                x[0], 
                                np.maximum(
                                    x[0], 
                                    x[1]
                                )
                            )
                        ), 
                        np.subtract(
                            np.minimum(
                                x[0], 
                                x[1]
                            ), 
                            np.maximum(
                                x[0], 
                                x[1]
                            )
                        )
                    )
                )
            )
        )
    )

def f8(x: np.ndarray) -> np.ndarray:
    return (
        np.add(
            np.subtract(
                np.subtract(
                    np.multiply(
                        np.multiply(
                            np.multiply(
                                2.302585092994046, 
                                np.square(x[5])
                            ), 
                            np.multiply(
                                np.square(x[5]), 
                                2.302585092994046
                            )
                        ), 
                        x[5]
                    ), 
                    np.square(
                        np.multiply(
                            np.square(x[4]), 
                            2.302585092994046
                        )
                    )
                ), 
                po.protected_divide(
                    np.multiply(
                        x[5], 
                        np.multiply(
                            np.multiply(
                                po.protected_log(
                                    np.square(x[5])
                                ), 
                                po.protected_log(
                                    np.multiply(
                                        np.square(x[5]), 
                                        1.7320508075688772
                                    )
                                )
                            ), 
                            np.square(x[5])
                        )
                    ), 
                    1.7320508075688772
                )
            ), 
            po.protected_log2(
                np.add(
                    np.minimum(
                        np.multiply(
                            np.add(
                                po.protected_mod(
                                    po.protected_arctan(
                                        po.protected_arctan(
                                            po.protected_arctan(x[3])
                                        )
                                    ), 
                                    1.4142135623730951
                                ), 
                                po.protected_arctan(
                                    np.subtract(
                                        1.618033988749895, 
                                        2.302585092994046
                                    )
                                )
                            ), 
                            po.protected_mod(
                                po.protected_arctan(3.141592653589793), 
                                po.protected_sinh(
                                    po.protected_sinh(x[3])
                                )
                            )
                        ), 
                        np.multiply(
                            np.multiply(
                                np.square(
                                    po.protected_arctan(
                                        po.protected_log(
                                            np.square(x[5])
                                        )
                                    )
                                ), 
                                np.square(
                                    np.multiply(
                                        2.302585092994046, 
                                        po.protected_divide(
                                            2.302585092994046, 
                                            np.add(
                                                1.7320508075688772, 
                                                x[1]
                                            )
                                        )
                                    )
                                )
                            ), 
                            np.square(x[3])
                        )
                    ), 
                    np.maximum(
                        np.subtract(
                            po.protected_exp(
                                np.add(
                                    np.multiply(
                                        po.protected_sinh(x[3]), 
                                        3.141592653589793
                                    ), 
                                    np.multiply(
                                        np.multiply(
                                            x[3], 
                                            2.302585092994046
                                        ), 
                                        3.141592653589793
                                    )
                                )
                            ), 
                            np.multiply(
                                np.square(
                                    po.protected_exp(
                                        np.square(x[1])
                                    )
                                ), 
                                np.square(
                                    np.multiply(
                                        np.square(
                                            np.square(x[3])
                                        ), 
                                        np.multiply(
                                            po.protected_sinh(x[3]), 
                                            3.141592653589793
                                        )
                                    )
                                )
                            )
                        ), 
                        np.maximum(
                            po.protected_divide(
                                po.protected_sinh(
                                    np.add(
                                        np.multiply(
                                            np.square(x[4]), 
                                            np.square(x[4])
                                        ), 
                                        np.multiply(
                                            np.square(x[4]), 
                                            np.minimum(
                                                np.subtract(
                                                    x[3], 
                                                    1.7320508075688772
                                                ), 
                                                x[3]
                                            )
                                        )
                                    )
                                ), 
                                np.square(
                                    np.minimum(
                                        x[5], 
                                        po.protected_sinh(
                                            po.protected_sinh(x[3])
                                        )
                                    )
                                )
                            ),
                            po.protected_divide(
                                po.protected_exp(
                                    np.add(
                                        np.multiply(
                                            np.square(x[4]), 
                                            np.square(x[3])
                                        ), 
                                        np.multiply(
                                            x[3], 
                                            np.multiply(
                                                x[3], 
                                                3.141592653589793
                                            )
                                        )
                                    )
                                ), 
                                po.protected_log2(
                                    po.protected_sinh(
                                        po.protected_arctan(
                                            po.protected_arctan(x[3])
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
    )